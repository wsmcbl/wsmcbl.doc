@startuml
left to right direction

actor Cashier

boundary CollectTariffView
boundary StudentProfilesView

control CollectTariffController
control CreateProfileStudentController
control PrintDocumentsController

entity ProfileStudentEntity
entity ProfileStudentEntites
entity TransactionEntity
entity CashierEntity




'--- Actor relations ---
Cashier --> CollectTariffView
note on link
    update()
    collectTariff(list<>)
    collectTariff(tariff)
    applydDiscount()
    applydArreas(arreas)
    saveCollection()
    printReceitps()
    isStudentInBlacklist()
    cancel()
    calculateTotalTariff()
end note
Cashier --> StudentProfilesView
note on link
    createProfileStudent()
    searchProfileStudent()
end note

'--- Views relations ----
CollectTariffView --> CollectTariffController
note on link
    getStudentProfile()
    applyDiscount()
    createTransaction()
    saveTransaction(Transaction)
    printTransaction()
    applyArreas()
    printStateAccount()
end note
StudentProfilesView --> CollectTariffController
note on link
    getListProfileStudent()
    openProfile(ID)
end note
StudentProfilesView --> CreateProfileStudentController
note on link
    createStudenProfile()
end note


'--- Controllers relations --- 
CollectTariffController --> ProfileStudentEntites
note on link
    getStudentProfile(ID)
    getListProfileStudent()
end note

CollectTariffController --> TransactionEntity
note on link
    Transaction<<Constuct>>(idProfile,idCasher)
    setTarif(List<Tarif>)
    calculateDiscount(list<Discount>)
end note

CollectTariffController -left-> PrintDocumentsController : printTransaction(Transaction)
CreateProfileStudentController --> ProfileStudentEntites : createProfileStudent()
PrintDocumentsController --> TransactionEntity : getData()


'--- Entity relations --- 
TransactionEntity --> ProfileStudentEntity : getIdProfilesStudent()
TransactionEntity --> CashierEntity : getIdCashier()
@enduml